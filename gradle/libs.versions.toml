# https://docs.gradle.org/current/userguide/platforms.html
# this file is automatically imported by gradle as it is in the default location
# can be changed
# avaliable to all subprojects
[versions]
# groovy = "3.0.5"
# rich version
# my-lib = { strictly = "[1.0, 2.0[", prefer = "1.2" }
checkstyle = "10.17.0"
junit5PluginVersion = '1.2.1'
pitestVersion = '1.15.2'

tomcat = "9+"
jersey = "2+"
jaxb = "2.3.1"
slf4j = "2+"
jakarta = "2+"
gson = "2+"
groovyJson = "3.0.21"

jupiter = '5.10.3'

[libraries]
# groovy-core = { module = "org.codehaus.groovy:groovy", version.ref = "groovy" }
# groovy-json = { module = "org.codehaus.groovy:groovy-json", version.ref = "groovy" }
# groovy-nio = { module = "org.codehaus.groovy:groovy-nio", version.ref = "groovy" }
# commons-lang3 = { group = "org.apache.commons", name = "commons-lang3", version = { strictly = "[3.8, 4.0[", prefer="3.9" } }

# API
tomcatCatalina = { group = "org.apache.tomcat", name = "tomcat-catalina", version.ref = "tomcat" }

# can access with libs.slf4j.api
slf4j-api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }

jaxbApi = { group = "javax.xml.bind", name = "jaxb-api", version.ref = "jaxb" }

jakartaWsRsApi = { group = "jakarta.ws.rs", name = "jakarta.ws.rs-api", version.ref = "jakarta" }

jerseyClient = { group = "org.glassfish.jersey.core", name = "jersey-client", version.ref = "jersey" }

jerseyContainerServletCore = { group = "org.glassfish.jersey.containers", name = "jersey-container-servlet-core", version.ref = "jersey" }

jerseyMediaMultipart = { group = "org.glassfish.jersey.media", name = "jersey-media-multipart", version.ref = "jersey" }

jerseyHk2 = { group = "org.glassfish.jersey.inject", name = "jersey-hk2", version.ref = "jersey" }

slf4j-simple = { group = "org.slf4j", name = "slf4j-simple", version.ref = "slf4j" }

gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

jerseyClientTest = { group = "org.glassfish.jersey.core", name = "jersey-client", version.ref = "jersey" }

junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "jupiter" }
junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "jupiter" }

groovy-json = { group = "org.codehaus.groovy", name = "groovy-json", version.ref = "groovyJson" }

# TOOLS
rewrite-staticAnalysis = { group = "org.openrewrite.recipe", name = "rewrite-static-analysis", version = "1.9.0" }
rewrite-javaSecurity = { group = "org.openrewrite.recipe", name = "rewrite-java-security", version = "2.9.0" }

# lint, format deps to be put in buildscript
# classpath("org.openrewrite:plugin:6.16.0")
# classpath("com.diffplug.spotless:spotless-plugin-gradle:6.25.0")
# classpath("com.github.spotbugs.snom:spotbugs-gradle-plugin:6.0.17")
# classpath("name.remal.gradle-plugins.sonarlint:sonarlint:4.2.4")
# classpath("info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.15.0")
rewrite-plugin = { group = "org.openrewrite", name = "plugin", version = "6.16.2" }
spotless-plugin = { group = "com.diffplug.spotless", name = "spotless-plugin-gradle", version = "6.25.0" }
spotbugs-plugin = { group = "com.github.spotbugs.snom", name = "spotbugs-gradle-plugin", version = "6.0.18" }
sonarlint-plugin = { group = "name.remal.gradle-plugins.sonarlint", name = "sonarlint", version = "4.2.4" }
pitest-plugin = { group = "info.solidsoft.gradle.pitest", name = "gradle-pitest-plugin", version = "1.15.0" }


[bundles]
# required in buildscript classpath deps to provide to all subprojects
tools = [
  "rewrite-plugin",
  "spotless-plugin",
  "spotbugs-plugin",
  "sonarlint-plugin",
  "pitest-plugin",
]

# groovy = ["groovy-core", "groovy-json", "groovy-nio"]
tomcat-api-compileOnly = [
  "tomcatCatalina",
]

tomcat-api-implementation = [
  "slf4j-api",
  "jaxbApi",
  "jakartaWsRsApi",
  "jerseyClient",
  "jerseyContainerServletCore",
  "jerseyMediaMultipart",
  "jerseyHk2",
  "slf4j-simple",
  "gson",
]

tomcat-api-testImplementation = [
  "jerseyClientTest"
]

[plugins]
# versions = { id = "com.github.ben-manes.versions", version = "0.45.0" }
# id "com.vanniktech.maven.publish" version "0.28.0"
vanniktechPublish = { id = "com.vanniktech.maven.publish", version = "0.29.0" }
	# id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
foojayResolver = { id = "org.gradle.toolchains.foojay-resolver-convention", version = "0.8.0" }
