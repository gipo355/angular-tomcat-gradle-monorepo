import org.gradle.api.file.FileVisitDetails

/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.8/userguide/multi_project_builds.html in the Gradle documentation.
 */


plugins {
	id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
	// WARN: doesn't work, possibly because this is loaded before loading the version catalog
	// alias(libs.plugins.foojayResolver)
}

rootProject.name = 'root'

// NOTE: must manually include subprojects, this is not nx

// https://docs.gradle.org/current/userguide/multi_project_builds.html#multi_project_builds
// avoid phantom dirs

// parse apps and libs dirs and include them if they have a build.gradle in it
fileTree('.').visit { FileVisitDetails details ->
	if (details.file.isDirectory()) {
		// TODO: check if not symbolic links
		// isRegularFIle
		// check if project.json is present
		if (file("$details.file/build.gradle").exists()) {

			// this will produce :appname, i want :dir:appname

			include ":${details.file.parentFile.name}:${details.file.name}"
			project(":${details.file.parentFile.name}:${details.file.name}").projectDir = details.file




			// include ":${details.file.name}"
			// project(":${details.file.name}").projectDir = details.file

			// get the absolute path of the dir, remove the ./ prefix
			// this will produce :dir:appname
			// include ":${details.file.getCanonicalPath().substring(2)}"
			// project(":${details.file.getCanonicalPath().substring(2)}").projectDir = details.file



			// include ":${details.file.name}"
			// project(":${details.file.name}").projectDir = details.file
		}
	}
}
// fileTree('./apps').visit { FileVisitDetails details ->
// 	if (details.file.isDirectory()) {
// 		if (file("$details.file/build.gradle").exists()) {
// 			include ":${details.file.name}"
// 			project(":${details.file.name}").projectDir = details.file
// 		}
// 	}
// }

// include all apps
// fileTree('./apps').visit { FileVisitDetails details ->
// 	if (details.file.isDirectory()) {
// 		include ":${details.file.name}"
// 		project(":${details.file.name}").projectDir = details.file
// 	}
// }

// include all libs
// fileTree('./libs').visit { FileVisitDetails details ->
// 	if (details.file.isDirectory()) {
// 		include ":${details.file.name}"
// 		project(":${details.file.name}").projectDir = details.file
// 	}
// }



// fileTree('.').visit { FileVisitDetails details ->
// 	if (details.file.isDirectory()) {
// 		if (file("$details.file/build.gradle").exists()) {
// 			include ":${details.file.name}"
// 			project(":${details.file.name}").projectDir = details.file
// 		}
// 	}
// }


// include(':libs:smispi')
// project(':libs:smispi').projectDir = file('libs/smispi')
// include(':libs:jakarta-base-rest')
// project(':libs:jakarta-base-rest').projectDir = file('libs/jakarta-base-rest')

// sharing dependencies between subprojects
// https://docs.gradle.org/current/userguide/platforms.html
// alternatively, use version catalogs TOML
// from file libs/libs.versions.toml: default to gradle/libs.versions.toml
// makes them available to all subprojects
//
// dependencyResolutionManagement {
//   versionCatalogs {
//     libs {
//       // alias 'org.openrewrite:rewrite-gradle-plugin'
//       // alias 'com.diffplug.spotless:spotless-plugin-gradle'
//       // alias 'com.github.spotbugs.snom:spotbugs-gradle-plugin'
//       // alias 'name.remal.gradle-plugins.sonarlint:sonarlint'
//       // alias 'info.solidsoft.gradle.pitest:gradle-pitest-plugin'
//       // version('rewrite-gradle-plugin', '6.16.0')
//       // version('spotless-plugin-gradle', '6.25.0')
//       // version('spotbugs-gradle-plugin', '6.0.17')
//       // version('sonarlint', '4.2.4')
//       // version('gradle-pitest-plugin', '1.15.0')
//       version('checkstyle', '10.17.0')
//
//       // examples
//       // library('groovy-core', 'org.codehaus.groovy:groovy:3.0.5')
//       // library('commons-lang3', 'org.apache.commons', 'commons-lang3').version {
//       //     strictly '[3.8, 4.0['
//       //     prefer '3.9'
//       // }
//       // plugin('versions', 'com.github.ben-manes.versions').version('0.45.0')
//
//       // tomcat webapp
//       version('tomcat', '9+')
//       library('tomcat-api', 'org.apache.tomcat', 'tomcat-catalina').versionRef('tomcat')
//
//       bundle('tomcat-api', ['tomcat-api'])
//     }
//   }
// }
// dependencyResolutionManagement {
//     versionCatalogs {
//         libs {
//             from(files("./gradle/libs.versions.toml"))
//         }
//     }
// }
