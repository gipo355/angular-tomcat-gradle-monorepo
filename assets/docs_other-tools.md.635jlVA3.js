import{_ as e,c as t,o as a,a5 as o}from"./chunks/framework.BGfKG4OG.js";const u=JSON.parse('{"title":"Other tools","description":"","frontmatter":{},"headers":[],"relativePath":"docs/other-tools.md","filePath":"docs/other-tools.md"}'),r={name:"docs/other-tools.md"},i=o('<h1 id="other-tools" tabindex="-1">Other tools <a class="header-anchor" href="#other-tools" aria-label="Permalink to &quot;Other tools&quot;">​</a></h1><p>List of other tools used in the project.</p><blockquote><p>It&#39;s my personal opinion to use every tool available that can help standardize the codebase and improve code quality.</p><p>While it may seem a bit daunting at first, (many tools, strict rules) this is aimed at reducing developers cognitive load.</p><p>Once the tools are setup, the developer can focus on writing code and let the tools handle the rest: formatting, default styles and linting.</p><p>No more fighting about code style.</p></blockquote><h3 id="pre-commit" tabindex="-1"><a href="https://jamiemason.github.io/syncpack/guide/getting-started/" target="_blank" rel="noreferrer">pre-commit</a> <a class="header-anchor" href="#pre-commit" aria-label="Permalink to &quot;[pre-commit](https://jamiemason.github.io/syncpack/guide/getting-started/)&quot;">​</a></h3><p>Add hooks to the git repository to run linters, formatters, nx commands and other scripts before every phase.</p><h3 id="syncpack" tabindex="-1"><a href="https://jamiemason.github.io/syncpack/guide/getting-started/" target="_blank" rel="noreferrer">syncpack</a> <a class="header-anchor" href="#syncpack" aria-label="Permalink to &quot;[syncpack](https://jamiemason.github.io/syncpack/guide/getting-started/)&quot;">​</a></h3><p>keep package.jsons in sync across multiple projects and organized.</p><h3 id="commitlint" tabindex="-1"><a href="https://commitlint.js.org/" target="_blank" rel="noreferrer">commitlint</a> <a class="header-anchor" href="#commitlint" aria-label="Permalink to &quot;[commitlint](https://commitlint.js.org/)&quot;">​</a></h3><p>ensure commits are following the conventional commit format. Attached to pre-commit hook.</p><h3 id="cz-git" tabindex="-1"><a href="https://cz-git.qbb.sh/guide/" target="_blank" rel="noreferrer">cz-git</a> <a class="header-anchor" href="#cz-git" aria-label="Permalink to &quot;[cz-git](https://cz-git.qbb.sh/guide/)&quot;">​</a></h3><p>provide an easy to use CLI interface to create conventional commits.</p><h3 id="linters-formatters" tabindex="-1">Linters / formatters <a class="header-anchor" href="#linters-formatters" aria-label="Permalink to &quot;Linters / formatters&quot;">​</a></h3><p><strong>java</strong></p><ul><li><a href="https://github.com/diffplug/spotless" target="_blank" rel="noreferrer">spotless</a></li><li><a href="https://docs.openrewrite.org/" target="_blank" rel="noreferrer">openrewrite</a></li><li>checkstyle</li><li>google-java-format</li></ul><p><strong>ts</strong></p><ul><li>prettier</li><li>eslint</li><li><a href="https://biomejs.dev/" target="_blank" rel="noreferrer">biome</a> (experimental, hopefully can replace eslint + prettier in 2025)</li></ul><p><strong>css/scss</strong></p><ul><li><a href="https://stylelint.io/" target="_blank" rel="noreferrer">stylelint</a></li></ul><p><strong>html</strong></p><ul><li><a href="https://github.com/htmlhint/HTMLHint" target="_blank" rel="noreferrer">htmlhint</a></li><li><a href="https://html-validate.org/usage/" target="_blank" rel="noreferrer">htmlvalidate</a></li></ul><p><em>note: <a href="https://marketplace.visualstudio.com/items?itemName=ms-edgedevtools.vscode-edge-devtools" target="_blank" rel="noreferrer">vscode extension</a> and browser <code>microsoft-edge</code> have builtin functionalities to provide additional lints and suggestions for accessibility</em></p><h3 id="vitepress" tabindex="-1">vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;vitepress&quot;">​</a></h3><p>serve with pnpm docs:dev</p><h3 id="pnpm" tabindex="-1">pnpm <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;pnpm&quot;">​</a></h3><p>pnpm is used to speed up the installation of the dependencies and save time in CI.</p><p>the file <code>{root}/pnpm-workspace.yaml</code> is used to define the packages.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>while pnpm workspaces is not required for nx to work, it&#39;s needed by some tools like changesets which depend on it to provide intellisense when adding packages</p></div>',27),s=[i];function n(l,p,c,h,d,m){return a(),t("div",null,s)}const f=e(r,[["render",n]]);export{u as __pageData,f as default};
