// NOTE: what is this?
import jdk.tools.jlink.resources.plugins

// NOTE: is theree a better more modern way to do this to pass plugins down to subprojects?
buildscript {
  // needed for applying plugins to subprojects
  repositories {
    mavenCentral()
    // provide gradle repo for plugins
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    gradlePluginPortal()
  }

  dependencies {
    // classpath("org.openrewrite:rewrite-gradle-plugin:6.16.0")
    classpath "org.openrewrite:plugin:6.16.0"
    classpath  "com.diffplug.spotless:spotless-plugin-gradle:6.25.0"
    classpath("com.github.spotbugs.snom:spotbugs-gradle-plugin:6.0.17")
  }
}

// https://github.com/openrewrite/rewrite/issues/1263

// https://discuss.gradle.org/t/multi-module-project-how-where-to-apply-plugins/46701/2

// passing all those to subprojects
subprojects {

  repositories {
    mavenCentral()
  //   // gradle plugins
  //   maven {
  //     url "https://plugins.gradle.org/m2/"
  //   }
  }

  // not working
  // https://plugins.gradle.org/plugin/org.openrewrite.rewrite
  // plugins {
  //   id 'project-report'
  //   id 'java'
  //   id 'maven-publish'
  //   id 'java-library'
  //   id 'jacoco'
  //   id 'groovy'
  //   id 'checkstyle'
  //   // id "com.vanniktech.maven.publish" version "0.28.0"
  //   // id 'com.diffplug.spotless' version '6.25.0'
  //   // id 'org.openrewrite.rewrite' version '6.16.0'
  //   // id "com.github.spotbugs" version "6.0.17"
  //   // id "name.remal.sonarlint" version "4.2.3"
  //   // id 'info.solidsoft.pitest' version '1.15.0'
  // }

  apply {
      plugin("java")
      plugin("maven-publish")
      plugin('java-library')
      plugin("project-report")
    	plugin('jacoco')
      plugin('war')
      plugin('idea')
      plugin('eclipse')
      plugin('checkstyle')
      plugin('groovy')

      plugin('org.openrewrite.rewrite')
      // https://plugins.gradle.org/plugin/com.diffplug.gradle.spotless
      plugin("com.diffplug.spotless")
      plugin("com.github.spotbugs")
    // CURRENT:
      plugin("com.vanniktech.maven.publish")

  }

  dependencies {
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.2")
	  testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.2")

    // tools
    rewrite("org.openrewrite.recipe:rewrite-static-analysis:1.9.0")

    rewrite("org.openrewrite.recipe:rewrite-java-security:2.9.0")
  }

  // shared configs
  // shared group, here or globally?
  group = 'io.github.gipo999'


  compileJava.options.encoding = "UTF-8"
  compileTestJava.options.encoding = "UTF-8"


  // ### REWRITE,
  rewrite {
    activeRecipe("org.openrewrite.staticanalysis.CodeCleanup")

    activeRecipe("org.openrewrite.java.security.PartialPathTraversalVulnerability")

    activeRecipe("org.openrewrite.java.security.JavaSecurityBestPractices")

    activeRecipe("org.openrewrite.java.security.RegularExpressionDenialOfService")
  } // ### REWRITE

  // ### CHECKSTYLE
  checkstyle {
    toolVersion '10.17.0'

    // configDirectory = '../../checkstyle'
    // configDirectory = file("../../checkstyle")

    ignoreFailures = false

    maxWarnings = 0
  } // ### CHECKSTYLE


} // subprojects
